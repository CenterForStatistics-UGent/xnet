% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predict.R
\docType{methods}
\name{predict.tskrr}
\alias{predict.tskrr}
\alias{predict,tskrr-method}
\title{predict method for tskrr fits}
\usage{
\method{predict}{tskrr}(object, k = NULL, g = NULL, testdim = TRUE,
  ...)

\S4method{predict}{tskrr}(object, k = NULL, g = NULL, testdim = TRUE,
  ...)
}
\arguments{
\item{object}{an object of class \code{\link[xnet:tskrr-class]{tskrr}}.}

\item{k}{a new K matrix or \code{NULL}. if \code{NULL}, the fitted
values on the training data are returned.}

\item{g}{a new G matrix or \code{NULL}. If \code{NULL}, K is used
for both.}

\item{testdim}{a logical value indicating whether the dimensions should
be checked prior to the calculation. You can set this to \code{FALSE} but
you might get more obscure errors if dimensions don't match.}

\item{...}{arguments passed to or from other methods}
}
\value{
a matrix with predicted values.
}
\description{
Obtains predictions from a \code{\link{tskrr}} model for new
data. To get the predictions on the training data, use the
function \code{\link[xnet:fitted]{fitted}} or set both \code{k}
to \code{NULL}.
}
\details{
Predictions can be calculated between new nodes and the nodes
used to train the model, between new sets of nodes, or both. Which
predictions are given, depends on the kernel matrices passed to the
function.

The kernel matrices should contain the kernel values between the
new nodes and the nodes used to train the model. The new nodes
should be on the rows, the nodes used to train the model on the columns.
This is also illustrated in the examples.
}
\examples{

## Predictions for homogenous networks

data(proteinInteraction)

idnew <- sample(nrow(Kmat_y2h_sc), 20)

trainY <- proteinInteraction[-idnew,-idnew]
trainK <- Kmat_y2h_sc[-idnew,-idnew]

testK <- Kmat_y2h_sc[idnew, - idnew]

mod <- tskrr(trainY, trainK, lambda = 0.1)
# Predict interaction between test vertices
predict(mod, testK, testK)

# Predict interaction between test and train vertices
predict(mod, testK)
predict(mod, g = testK)

## Predictions for heterogenous networks
data("drugtarget")

idnewK <- sample(nrow(targetSim), 10)
idnewG <- sample(ncol(drugSim), 10)

trainY <- drugTargetInteraction[-idnewK, -idnewG]
trainK <- targetSim[-idnewK, -idnewK]
trainG <- drugSim[-idnewG, -idnewG]

testK <- targetSim[idnewK, -idnewK]
testG <- drugSim[idnewG, -idnewG]

mod <- tskrr(trainY, trainK, trainG, lambda = 0.01)

# Predictions for new targets on drugs in model
predict(mod, testK)
# Predictions for new drugs on targets in model
predict(mod, g = testG)
# Predictions for new drugs and targets
predict(mod, testK, testG)

}
\seealso{
\code{\link{tskrr}} and \code{\link{tskrrTune}} for
fitting the models.
}
